<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>GUAVAL</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>In every person that you meet, There&#39;s this little piece of god.</description>
    <pubDate>Sat, 31 Oct 2020 08:09:40 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>c++文件夹和文件读取操作</title>
      <link>http://example.com/2020/10/31/FileRead/</link>
      <guid>http://example.com/2020/10/31/FileRead/</guid>
      <pubDate>Sat, 31 Oct 2020 06:30:30 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;C-中用-findfirst遍历文件夹及文件&quot;&gt;&lt;a href=&quot;#C-中用-findfirst遍历文件夹及文件&quot; class=&quot;headerlink&quot; title=&quot;C++中用_findfirst遍历文件夹及文件&quot;&gt;&lt;/a&gt;C++中用_findfirst遍历文件夹及文件&lt;/h1&gt;&lt;p&gt;c++中读取文件可以采取以下几个函数：_findfirst, _findnext, _findclose, 结构体_finddata_t存储各种文件信息。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct _finddata64i32_t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned attrib; &amp;#x2F;&amp;#x2F;文件属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _time64_t time_create; &amp;#x2F;&amp;#x2F;文件创建时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _time64_t time_access; &amp;#x2F;&amp;#x2F;文件最后访问时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _time64_t time_write; &amp;#x2F;&amp;#x2F;文件最后修改时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _fsize_t size; &amp;#x2F;&amp;#x2F;文件大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char name[260]; &amp;#x2F;&amp;#x2F;文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="C-中用-findfirst遍历文件夹及文件"><a href="#C-中用-findfirst遍历文件夹及文件" class="headerlink" title="C++中用_findfirst遍历文件夹及文件"></a>C++中用_findfirst遍历文件夹及文件</h1><p>c++中读取文件可以采取以下几个函数：_findfirst, _findnext, _findclose, 结构体_finddata_t存储各种文件信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">struct _finddata64i32_t</span><br><span class="line">&#123;</span><br><span class="line">    unsigned attrib; &#x2F;&#x2F;文件属性</span><br><span class="line">    _time64_t time_create; &#x2F;&#x2F;文件创建时间</span><br><span class="line">    _time64_t time_access; &#x2F;&#x2F;文件最后访问时间</span><br><span class="line">    _time64_t time_write; &#x2F;&#x2F;文件最后修改时间</span><br><span class="line">    _fsize_t size; &#x2F;&#x2F;文件大小</span><br><span class="line">    char name[260]; &#x2F;&#x2F;文件名</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unsigned attribute表示文件属性:</span><br><span class="line">_A_ARCH(存档)， _A_HIDDEN(隐藏)， _A_NORMAL(正常)， _A_RDONLY(只读)， _A_SUBDIR(文件夹)， _A_SYSTEM(系统)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">long _findfirst(char* filespec, struct _finddata_t *fileInfo);</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">    如果查找成功的话，将返回一个long型的唯一的查找用的句柄，这个句柄将在_findnext函数中被使用。若失败，则返回1.</span><br><span class="line">参数:</span><br><span class="line">    filespec: 表明文件类型的字符串，可支持通配符。如*.c。</span><br><span class="line">    fileInfo: 用来存放文件信息的结构体指针，这个结构体必须在调用此函数前声明。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int _findnext(long handle, struct _finddata_t *fileInfo);</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">    成功为0， 失败-1</span><br><span class="line">参数:</span><br><span class="line">    handle: 由函数_findfirst返回的句柄。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_findclose(long handle)结束查找。</span><br></pre></td></tr></table></figure><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">std::vector&lt;std::string&gt; filename;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;文件句柄</span><br><span class="line">  intptr_t hFile &#x3D; 0;</span><br><span class="line">  &#x2F;&#x2F;文件信息</span><br><span class="line">  struct _finddata_t fileInfo;</span><br><span class="line">  std::string p;</span><br><span class="line"></span><br><span class="line">  if ((hFile &#x3D; _findfirst(p.assign(FILEPATH).append(&quot;\\*&quot;).c_str(), &amp;fileInfo)) !&#x3D; -1)</span><br><span class="line">  &#123;</span><br><span class="line">      do&#123;</span><br><span class="line">          filename.push_back(p.assign(FILEPATH).append(&quot;\\&quot;).append(fileInfo.name));</span><br><span class="line">      &#125; while (_findnext(hFile, &amp;fileInfo) &#x3D;&#x3D; 0);</span><br><span class="line">      _findclose(hFile);</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F;输出文件名称</span><br><span class="line">  std::cout &lt;&lt; &quot;filename: &quot; &lt;&lt; std::endl;</span><br><span class="line">  for (auto&amp; name : filename)</span><br><span class="line">  &#123;</span><br><span class="line">      std::cout &lt;&lt; name &lt;&lt; std::endl;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/C/">C++</category>
      
      
      <comments>http://example.com/2020/10/31/FileRead/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>绕空间中任意轴或任意一条直线旋转</title>
      <link>http://example.com/2020/10/30/ArbitraryAxisRot/</link>
      <guid>http://example.com/2020/10/30/ArbitraryAxisRot/</guid>
      <pubDate>Fri, 30 Oct 2020 15:28:30 GMT</pubDate>
      
      <description>&lt;img src=&quot;/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot01.png&quot; class title=&quot;This is an image&quot;&gt;
&lt;img src=&quot;/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot02.png&quot; class title=&quot;This is an image&quot;&gt;
&lt;p&gt;如上图所示，空间中的一点P1绕着空间直线L旋转$\theta$到P2。&lt;font color=&quot;#0099ff&quot;&gt;&lt;a href=&quot;#例子参考&quot;&gt;具体例子&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;

x = Au + x_0;\\&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space y = Bu + y_0; \space \space \space \space \space \space \space \space \space 0 &lt;= u &lt;= 1 \\&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
z = Cu + z_0;\\&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
L = \sqrt{A^2 + B^2 + C^2} u;\\&lt;/script&gt;&lt;p&gt;公式： &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
[T] = [D]^{-1}[R_x]^{-1}[R_y]^{-1}[R_z^\theta][R_y][R_x][D]&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
P_2 = [T]P_1&lt;/script&gt;&lt;h2 id=&quot;矩阵T求解步骤如下：&quot;&gt;&lt;a href=&quot;#矩阵T求解步骤如下：&quot; class=&quot;headerlink&quot; title=&quot;矩阵T求解步骤如下：&quot;&gt;&lt;/a&gt;矩阵T求解步骤如下：&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<img src="/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot01.png" class title="This is an image"><img src="/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot02.png" class title="This is an image"><p>如上图所示，空间中的一点P1绕着空间直线L旋转$\theta$到P2。<font color="#0099ff"><a href="#例子参考">具体例子</a></font></p><script type="math/tex; mode=display">x = Au + x_0;\\</script><script type="math/tex; mode=display">\space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space y = Bu + y_0; \space \space \space \space \space \space \space \space \space 0 <= u <= 1 \\</script><script type="math/tex; mode=display">z = Cu + z_0;\\</script><script type="math/tex; mode=display">L = \sqrt{A^2 + B^2 + C^2} u;\\</script><p>公式： </p><script type="math/tex; mode=display">[T] = [D]^{-1}[R_x]^{-1}[R_y]^{-1}[R_z^\theta][R_y][R_x][D]</script><script type="math/tex; mode=display">P_2 = [T]P_1</script><h2 id="矩阵T求解步骤如下："><a href="#矩阵T求解步骤如下：" class="headerlink" title="矩阵T求解步骤如下："></a>矩阵T求解步骤如下：</h2><a id="more"></a><h3 id="第一步：-将P0平移到原点O处"><a href="#第一步：-将P0平移到原点O处" class="headerlink" title="第一步： 将P0平移到原点O处"></a>第一步： 将P0平移到原点O处</h3><p><img src="/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot03.png" alt="avatar"></p><script type="math/tex; mode=display">P_0 = \left[ x_0, y_0, z_0    \right]^T</script><script type="math/tex; mode=display">[D] =  \left[  \begin{matrix}  1 & 0 & 0 & -x_0 \\  0 & 1 & 0 & -y_0 \\  0 & 0 & 0 & -z_0 \\  0 & 0 & 0 & 1  \end{matrix}  \right]</script><h3 id="第二步：绕X轴旋转向量到X-Z平面上"><a href="#第二步：绕X轴旋转向量到X-Z平面上" class="headerlink" title="第二步：绕X轴旋转向量到X-Z平面上"></a>第二步：绕X轴旋转向量到X-Z平面上</h3><p><img src="/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot04.png" alt="avatar"></p><p>如图所示，求出绕着x轴旋转$\theta_1$的旋转矩阵</p><script type="math/tex; mode=display">L = \sqrt{A^2 + B^2 + C^2}</script><script type="math/tex; mode=display">V = \sqrt{B^2 + C^2}</script><script type="math/tex; mode=display">\sin\theta_1 = B \div V</script><script type="math/tex; mode=display">\cos\theta_1 = C \div V</script><script type="math/tex; mode=display">[R_x] = \left[ \begin{matrix}    1 & 0 & 0 & 0 \\0 & \cos\theta_1 & -\sin\theta_1 & 0 \\0 & \sin\theta_1 & \cos\theta_1 & 0 \\0 & 0 & 0 & 1\end{matrix}    \right] = \left[ \begin{matrix}    1 & 0 & 0 & 0 \\0 & C/V & -B/V & 0 \\0 & B/V & C/V & 0 \\0 & 0 & 0 & 1\end{matrix}\right]</script><h3 id="第三步：绕Y轴旋转到Z轴方向"><a href="#第三步：绕Y轴旋转到Z轴方向" class="headerlink" title="第三步：绕Y轴旋转到Z轴方向"></a>第三步：绕Y轴旋转到Z轴方向</h3><p><img src="/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot05.png" alt="avatar"></p><p>如图所示，求出绕着y轴旋转$\theta_2$的旋转矩阵</p><script type="math/tex; mode=display">\sin\theta_2 = -A \div L</script><script type="math/tex; mode=display">\cos\theta_2 = V \div L</script><script type="math/tex; mode=display">[R_y] = \left[ \begin{matrix}    \cos\theta_2 & 0 & \sin\theta_2 & 0 \\0 & 1 & 0 & 0 \\-\sin\theta_2 & 0 & \cos\theta_2 & 0 \\0 & 0 & 0 & 1\end{matrix}    \right] = \left[ \begin{matrix}    V/L & 0 & -A/L & 0 \\0 & 1 & 0 & 0 \\A/L & 0 & V/L & 0 \\0 & 0 & 0 & 1\end{matrix}\right]</script><h3 id="第四步：绕Z轴旋转"><a href="#第四步：绕Z轴旋转" class="headerlink" title="第四步：绕Z轴旋转"></a>第四步：绕Z轴旋转</h3><p><img src="/2020/10/30/ArbitraryAxisRot/ArbitraryAxisRot06.png" alt="avatar"></p><p>这里的$\theta$是你所要求的绕某个旋转轴或直线旋转的角度</p><script type="math/tex; mode=display">[R_z] = \left[ \begin{matrix}    \cos\theta & -\sin\theta & 0 & 0 \\\sin\theta & \cos\theta & 0 & 0 \\0 & 0 & 1 & 0 \\0 & 0 & 0 & 1\end{matrix}    \right]</script><h3 id="第五步：求出绕Y轴旋转的旋转矩阵的逆矩阵"><a href="#第五步：求出绕Y轴旋转的旋转矩阵的逆矩阵" class="headerlink" title="第五步：求出绕Y轴旋转的旋转矩阵的逆矩阵"></a>第五步：求出绕Y轴旋转的旋转矩阵的逆矩阵</h3><script type="math/tex; mode=display">[R_y]^{-1} = \left[ \begin{matrix}    V/L & 0 & A/L & 0 \\0 & 1 & 0 & 0 \\-A/L & 0 & V/L & 0 \\0 & 0 & 0 & 1\end{matrix}\right]</script><h3 id="第六步：求出绕X轴旋转的旋转矩阵的逆矩阵"><a href="#第六步：求出绕X轴旋转的旋转矩阵的逆矩阵" class="headerlink" title="第六步：求出绕X轴旋转的旋转矩阵的逆矩阵"></a>第六步：求出绕X轴旋转的旋转矩阵的逆矩阵</h3><script type="math/tex; mode=display">[R_x]^{-1} = \left[ \begin{matrix}    1 & 0 & 0 & 0 \\0 & C/V & B/V & 0 \\0 & -B/V & C/V & 0 \\0 & 0 & 0 & 1\end{matrix}\right]</script><h3 id="第七步："><a href="#第七步：" class="headerlink" title="第七步："></a>第七步：</h3><script type="math/tex; mode=display">[D]^{-1} =  \left[  \begin{matrix}  1 & 0 & 0 & x_0 \\  0 & 1 & 0 & y_0 \\  0 & 0 & 0 & z_0 \\  0 & 0 & 0 & 1  \end{matrix}  \right]</script><h3 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h3><script type="math/tex; mode=display">[T] = [D]^{-1}[R_x]^{-1}[R_y]^{-1}[R_z^\theta][R_y][R_x][D]</script><script type="math/tex; mode=display">P_2 = [T]P_1</script><h2 id="例子参考："><a href="#例子参考：" class="headerlink" title="例子参考："></a>例子参考：<div id="例子参考"></div></h2><p>给出直线MN的两个点N(6, -2, 0)和点M(12, 8, 0)</p><script type="math/tex; mode=display">p_1 \space \space \space p_2 \space \space \space p_3 \space \space \space p_4</script><p>四个点：$\space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space$ $[P_1] =<br>  \left[<br>  \begin{matrix}<br>  3 &amp; 10 &amp; 1 &amp; 3 \\<br>  5 &amp; 6 &amp; 1 &amp; 5 \\<br>  0 &amp; 0 &amp; 0 &amp; 0 \\<br>  1 &amp; 1 &amp; 1 &amp; 1<br>  \end{matrix}<br>  \right]$ 绕着直线MN旋转60度。</p><p>已知：</p><script type="math/tex; mode=display">\space \space \space \space \space \space \space \space \space \space \space \space A = 12 - 6 = 6;  \\</script><script type="math/tex; mode=display">\space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space B = 8 - (-2) = 10;  \\</script><script type="math/tex; mode=display">\space \space \space \space \space \space \space \space \space C = 0 - 0 = 0;  \\</script><p>==&gt;</p><script type="math/tex; mode=display">\space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space x = 6 + 6u; \spacey = -2 + 10u; \spacez = 0;\\</script><script type="math/tex; mode=display">\space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space L=\sqrt{A^2 + B^2 + C^2} \\</script><script type="math/tex; mode=display">V = \sqrt{C^2}</script><script type="math/tex; mode=display">\space</script><script type="math/tex; mode=display">[D] =  \left[  \begin{matrix}  1 & 0 & 0 & -6 \\  0 & 1 & 0 & 2 \\  0 & 0 & 0 & 0 \\  0 & 0 & 0 & 1  \end{matrix}  \right]\space \space \space \space \space \space \space \space \space \space[R_x] =  \left[  \begin{matrix}  1 & 0 & 0 & 0 \\  0 & C/V & -B/V & 0 \\  0 & B/V& C/V & 0 \\  0 & 0 & 0 & 1  \end{matrix}  \right]</script><script type="math/tex; mode=display">\space</script><script type="math/tex; mode=display">[R_y] = \left[ \begin{matrix}    V/L & 0 & -A/L & 0 \\0 & 1 & 0 & 0 \\A/L & 0 & V/L & 0 \\0 & 0 & 0 & 1\end{matrix}\right]\space \space [R_z] = \left[ \begin{matrix}    \cos(60) & -\sin(60) & 0 & 0 \\\sin(60) & \cos(60) & 0 & 0 \\0 & 0 & 1 & 0 \\0 & 0 & 0 & 1\end{matrix}    \right]</script><script type="math/tex; mode=display">\space</script><script type="math/tex; mode=display">[R_y]^{-1} = \left[ \begin{matrix}    V/L & 0 & A/L & 0 \\0 & 1 & 0 & 0 \\-A/L & 0 & V/L & 0 \\0 & 0 & 0 & 1\end{matrix}\right][R_x]^{-1} = \left[ \begin{matrix}    1 & 0 & 0 & 0 \\0 & C/V & B/V & 0 \\0 & -B/V & C/V & 0 \\0 & 0 & 0 & 1\end{matrix}\right]</script><script type="math/tex; mode=display">\space</script><script type="math/tex; mode=display">[D]^{-1} =  \left[  \begin{matrix}  1 & 0 & 0 & 6 \\  0 & 1 & 0 & -2 \\  0 & 0 & 0 & 0 \\  0 & 0 & 0 & 1  \end{matrix}  \right]</script><p>代入公式：</p><script type="math/tex; mode=display">[T] = [D]^{-1}[R_x]^{-1}[R_y]^{-1}[R_z^\theta][R_y][R_x][D]</script><script type="math/tex; mode=display">P_2 = [T]P_1</script><p>==&gt;</p><script type="math/tex; mode=display">[P_2] =  \left[  \begin{matrix}  5.6471 & 10.2941 & 3.5000 & 5.6471 \\  3.4118 & 5.8235 & -0.5000 & 3.4118 \\  5.3468 & 0.5941 & 5.0498 & 5.3468 \\  1.0000 & 1.0000 & 1.0000 & 1.0000  \end{matrix}  \right]</script><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#define degreetoRad M_PI &#x2F; 180.f</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;点绕直线NM旋转60度</span><br><span class="line">Eigen::Matrix4d P1, P2;</span><br><span class="line">P1 &lt;&lt; 3, 10, 1, 3,</span><br><span class="line">      5, 6, 1, 5,</span><br><span class="line">      0, 0, 0, 0,</span><br><span class="line">      1, 1, 1, 1;</span><br><span class="line"></span><br><span class="line">double A, B, C;</span><br><span class="line">double L, V, theta;</span><br><span class="line"></span><br><span class="line">A &#x3D; 6;</span><br><span class="line">B &#x3D; 10;</span><br><span class="line">C &#x3D; 0;</span><br><span class="line">L &#x3D; sqrt(pow(A, 2) + pow(B, 2) + pow(C, 2));</span><br><span class="line">V &#x3D; sqrt(pow(C, 2));</span><br><span class="line"></span><br><span class="line">Eigen::Matrix4d T, D, RX, RY, RZ;</span><br><span class="line"></span><br><span class="line">D &lt;&lt; 1, 0, 0, -6,</span><br><span class="line">     0, 1, 0, 2,</span><br><span class="line">     0, 0, 0, 0,</span><br><span class="line">     0, 0, 0, 1;</span><br><span class="line"></span><br><span class="line">RX &lt;&lt; 1, 0, 0, 0,</span><br><span class="line">      0, C&#x2F;V, -B&#x2F;V, 0,</span><br><span class="line">      0, B&#x2F;V, C&#x2F;V, 0,</span><br><span class="line">      0, 0, 0, 1;</span><br><span class="line"></span><br><span class="line">RY &lt;&lt; V&#x2F;L, 0, -A&#x2F;L, 0,</span><br><span class="line">      0, 1, 0, 0,</span><br><span class="line">      A&#x2F;L, 0, V&#x2F;L, 0,</span><br><span class="line">      0, 0, 0, 1;</span><br><span class="line"></span><br><span class="line">RZ &lt;&lt; cos(60 * degreetoRad), -sin(60 * degreetoRad), 0, 0,</span><br><span class="line">      sin(60 * degreetoRad), cos(60 * degreetoRad), 0, 0,</span><br><span class="line">      0, 0, 1, 0,</span><br><span class="line">      0, 0, 0, 1;</span><br><span class="line"></span><br><span class="line">T &#x3D; D.inverse() * RX.inverse() * RY.inverse() * RZ * RY * RX * D;</span><br><span class="line">P2 &#x3D; T * P1;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; &quot;Result: &quot; &lt;&lt; P2(0, 0) &lt;&lt; &quot; , &quot; &lt;&lt; P2(0, 1) &lt;&lt; &quot; , &quot; &lt;&lt; P2(0, 2) &lt;&lt; &quot; , &quot; &lt;&lt; P2(0, 3) &lt;&lt; &quot; , &quot;</span><br><span class="line">                        &lt;&lt; P2(1, 0) &lt;&lt; &quot; , &quot; &lt;&lt; P2(1, 1) &lt;&lt; &quot; , &quot; &lt;&lt; P2(1, 2) &lt;&lt; &quot; , &quot; &lt;&lt; P2(1, 3) &lt;&lt; &quot; , &quot;</span><br><span class="line">                        &lt;&lt; P2(2, 0) &lt;&lt; &quot; , &quot; &lt;&lt; P2(2, 1) &lt;&lt; &quot; , &quot; &lt;&lt; P2(2, 2) &lt;&lt; &quot; , &quot; &lt;&lt; P2(2, 3) &lt;&lt; &quot; , &quot;</span><br><span class="line">                        &lt;&lt; P2(3, 0) &lt;&lt; &quot; , &quot; &lt;&lt; P2(3, 1) &lt;&lt; &quot; , &quot; &lt;&lt; P2(3, 2) &lt;&lt; &quot; , &quot; &lt;&lt; P2(3, 3);</span><br></pre></td></tr></table></figure><p>[参考:]<a href="https://www.engr.uvic.ca/~mech410/lectures/4_2_RotateArbi.pdf">https://www.engr.uvic.ca/~mech410/lectures/4_2_RotateArbi.pdf</a></p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/Math/">Math</category>
      
      
      <comments>http://example.com/2020/10/30/ArbitraryAxisRot/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GuavaL</title>
      <link>http://example.com/2020/09/28/about/</link>
      <guid>http://example.com/2020/09/28/about/</guid>
      <pubDate>Mon, 28 Sep 2020 12:18:24 GMT</pubDate>
      
      <description>&lt;h4 id=&quot;愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。&quot;&gt;&lt;a href=&quot;#愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。&quot; class=&quot;headerlink&quot; title=&quot;愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。&quot;&gt;&lt;/a&gt;愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。&lt;/h4&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h4 id="愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。"><a href="#愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。" class="headerlink" title="愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。"></a>愿你所得过少时，不会终日愤愤；愿你所得过多时，不必终日惶恐。</h4><a id="more"></a><script type="math/tex; mode=display">\space\space</script><p>工作：机器人算法工程师</p><p>地点：北京</p><ul><li><p>为什么写博客？</p><p>  工作一年多了吧，一直想着有一个自己的博客，一来可以总结工作中学习到的各种知识，二来通过网络不断查询资料，发现找一篇优秀的博文真的挺难，希望自己可以写一些实用易懂的东西出来。</p></li><li><p>个人兴趣</p><p>  美剧是我的最爱吧，工作之余喜欢看美剧，摩登家庭、嘻哈帝国、老友记、寻妈记、绝命毒师…等。偶尔做一些视频剪辑。感兴趣可以搜索抖音GuavaL。</p><p>  工作之余，还有健身、游泳……</p></li><li><p>版权说明</p><p>  转载文章著名链接就好</p></li><li><p>联系方式</p><p>  guaval0220@gmail.com</p></li></ul>]]></content:encoded>
      
      
      
      
    </item>
    
  </channel>
</rss>
